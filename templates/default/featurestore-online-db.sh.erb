#!/usr/bin/env bash

#
# This script is used to create/remove a MySQL Cluster database for each online featurestore
#

help() {
    echo ""
    echo "usage: $0 [add databasename do_password do_password_encrypted ds_password ds_password_encrypted] | [rm databasename]"
    echo ""
    exit 1
}

random-string()
{
    cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w ${1:-16} | head -n 1
}


MYSQL_CMD="sudo <%= node['ndb']['dir'] %>/mysql-cluster/ndb/scripts/mysql-client.sh -e"


if [ $# -lt 3 ]; then
    help
fi

# Check mysql database name is valid syntactically
# https://stackoverflow.com/questions/9537771/mysql-database-name-restrictions
DB_NAME=$2
# if [ "$DB_NAME" =~ "^[^\\/?%*:|\"<>.]{1,64}$" ]; then
if [ "$DB_NAME" =~ ";" ]; then
   echo "Invalid database name. The string length for the database name must be >2 and <=64. It may also contai an invalid character."
   exit 5
fi

   
if [ "$1" == "add" ] ; then

  if [ $# -lt 6 ]; then
    help
  fi

  DO_USERNAME="do_${DB_NAME}"
  DS_USERNAME="do_${DB_NAME}"
  
  # generate random password
  # DO_PWD=$(random-string)
  DO_PWD=$3
  if [ "$DO_PWD" =~ ";" ]; then
   echo "Invalid database password character ';'"
   exit 5
  fi
  DO_PWD_ENCRYPTED=$4
  if [ "$DO_PWD_ENCRYPTED" =~ ";" ]; then
   echo "Invalid database password character ';'"
   exit 5
  fi

  DS_PWD=$5
  if [ "$DS_PWD" =~ ";" ]; then
   echo "Invalid database password character ';'"
   exit 5
  fi
  DS_PWD_ENCRYPTED=$6
  if [ "$DS_PWD_ENCRYPTED" =~ ";" ]; then
   echo "Invalid database password character ';'"
   exit 5
  fi

  
  $MYSQL_CMD "CREATE DATABASE IF NOT EXISTS $DB_NAME"
  RES=$?
  if [ $RES -eq 0 ]; then
     $MYSQL_CMD "CREATE USER \"$DO_USERNAME\"@'%' IDENTIFIED BY \"$DO_PWD\""
     RES=$?     
     if [ $RES -eq 0 ]; then
       $MYSQL_CMD "CREATE USER \"$DS_USERNAME\"@'%' IDENTIFIED BY \"$DS_PWD\""
       RES=$?     
       if [ $RES -eq 0 ]; then
	$MYSQL_CMD "GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO \"$DO_USERNAME\"@'%'"
        RES=$?
        if [ $RES -eq 0 ]; then
          $MYSQL_CMD "GRANT SELECT PRIVILEGES ON ${DB_NAME}.* TO \"$DS_USERNAME\"@'%'"
          RES=$?
          if [ $RES -eq 0 ]; then
            $MYSQL_CMD "UPDATE `hopsworks`.`feature_store` SET `hopsworks`.`feature_store`.`do_online_db_password` = \"$DO_PWD_ENCRYPTED\" WHERE `hopsworks`.`feature_store`.`project_id` = (SELECT `hopsworks`.`project`.`id` FROM `hopsworks`.`project` WHERE `hopsworks`.`project`.`projectname`=\"$DB_NAME\")"
            RES=$?
              if [ $RES -eq 0 ]; then
                $MYSQL_CMD "UPDATE `hopsworks`.`feature_store` SET `hopsworks`.`feature_store`.`ds_online_db_password` = \"$DS_PWD_ENCRYPTED\" WHERE `hopsworks`.`feature_store`.`project_id` = (SELECT `hopsworks`.`project`.`id` FROM `hopsworks`.`project` WHERE `hopsworks`.`project`.`projectname`=\"$DB_NAME\")"
                RES=$?
          fi
     fi
  fi
  exit $RES
  
elif [ "$1" == "rm" ] ; then

  $MYSQL_CMD "DROP DATABASE IF EXISTS $DB_NAME"
  if [ $? -ne 0 ]; then
     echo "Problem when trying to drop the database $DB_NAME"
  fi
  $MYSQL_CMD "DROP USER IF EXISTS \"$DO_USERNAME\"@'%'"
  if [ $? -ne 0 ]; then
     echo "Problem when trying to drop the user $DO_USERNAME"
  fi
  $MYSQL_CMD "DROP USER IF EXISTS \"$DS_USERNAME\"@'%'"
  if [ $? -ne 0 ]; then
     echo "Problem when trying to drop the user $DS_USERNAME"
  fi
else
 help
fi 
